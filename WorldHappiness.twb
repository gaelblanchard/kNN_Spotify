<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0510.1418                               -->
<workbook original-version='18.1' source-build='2018.1.1 (20181.18.0510.1418)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='full_country_data' inline='true' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='full_country_data' name='textscan.1cvcnmk1lavke41dz38gv1w9kp2p'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='/Users/ak/Desktop/Tableau/World_Happiness/data_prep_whappiness/full_country_data.csv' dataRefreshTime='' directory='/Users/ak/Desktop/Tableau/World_Happiness/data_prep_whappiness' filename='/var/folders/p0/98h3rv8x7n5550sdbn2y34xr0000gn/T/tableau-temp/1wvqwlt1jc94gn19yrfc7096108o/full_country_data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1cvcnmk1lavke41dz38gv1w9kp2p' name='full_country_data.csv' table='[full_country_data#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:BF243:no:A1:BF243:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Region.x' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Area..sq..mi..' ordinal='3' />
            <column datatype='integer' name='Pop..Density..per.sq..mi..' ordinal='4' />
            <column datatype='integer' name='Coastline..coast.area.ratio.' ordinal='5' />
            <column datatype='integer' name='Net.migration' ordinal='6' />
            <column datatype='integer' name='Infant.mortality..per.1000.births.' ordinal='7' />
            <column datatype='integer' name='GDP....per.capita.' ordinal='8' />
            <column datatype='integer' name='Literacy....' ordinal='9' />
            <column datatype='integer' name='Phones..per.1000.' ordinal='10' />
            <column datatype='integer' name='Arable....' ordinal='11' />
            <column datatype='integer' name='Crops....' ordinal='12' />
            <column datatype='integer' name='Other....' ordinal='13' />
            <column datatype='integer' name='Climate' ordinal='14' />
            <column datatype='integer' name='Birthrate' ordinal='15' />
            <column datatype='integer' name='Deathrate' ordinal='16' />
            <column datatype='integer' name='Agriculture' ordinal='17' />
            <column datatype='integer' name='Industry' ordinal='18' />
            <column datatype='integer' name='Service' ordinal='19' />
            <column datatype='string' name='country.x' ordinal='20' />
            <column datatype='string' name='country.y' ordinal='21' />
            <column datatype='real' name='unemployment_percentage' ordinal='22' />
            <column datatype='integer' name='CPI.Rank' ordinal='23' />
            <column datatype='string' name='Country.Code' ordinal='24' />
            <column datatype='string' name='Region.y' ordinal='25' />
            <column datatype='integer' name='Corruption.Perceptions.Index..CPI.' ordinal='26' />
            <column datatype='real' name='Standard.Error' ordinal='27' />
            <column datatype='integer' name='Lower.Confidence.Interval.x' ordinal='28' />
            <column datatype='integer' name='Upper.Confidence.Interval.x' ordinal='29' />
            <column datatype='integer' name='World.Bank.CPIA' ordinal='30' />
            <column datatype='integer' name='World.Economic.Forum.EOS' ordinal='31' />
            <column datatype='integer' name='Global.Insight.Country.Risk.Ratings' ordinal='32' />
            <column datatype='integer' name='Bertelsmann.Foundation.Transformation.Index' ordinal='33' />
            <column datatype='integer' name='African.Development.Bank.CPIA' ordinal='34' />
            <column datatype='integer' name='IMD.World.Competitiveness.Yearbook' ordinal='35' />
            <column datatype='integer' name='Bertelsmann.Foundation.Sustainable.Governance.Index' ordinal='36' />
            <column datatype='integer' name='World.Justice.Project.Rule.of.Law.Index' ordinal='37' />
            <column datatype='integer' name='PRS.International.Country.Risk.Guide' ordinal='38' />
            <column datatype='integer' name='Varities.of.Democracy.Project' ordinal='39' />
            <column datatype='integer' name='Economist.Intelligence.Unit.Country.Ratings' ordinal='40' />
            <column datatype='integer' name='Freedom.House.Nations.in.Transit.Ratings' ordinal='41' />
            <column datatype='integer' name='PERC.Asia.Risk.Guide' ordinal='42' />
            <column datatype='integer' name='Sources' ordinal='43' />
            <column datatype='string' name='country.x1' ordinal='44' />
            <column datatype='string' name='Region' ordinal='45' />
            <column datatype='integer' name='Happiness.Rank' ordinal='46' />
            <column datatype='real' name='Happiness.Score' ordinal='47' />
            <column datatype='real' name='Lower.Confidence.Interval.y' ordinal='48' />
            <column datatype='real' name='Upper.Confidence.Interval.y' ordinal='49' />
            <column datatype='real' name='Economy..GDP.per.Capita.' ordinal='50' />
            <column datatype='real' name='Family' ordinal='51' />
            <column datatype='real' name='Health..Life.Expectancy.' ordinal='52' />
            <column datatype='real' name='Freedom' ordinal='53' />
            <column datatype='real' name='Trust..Government.Corruption.' ordinal='54' />
            <column datatype='real' name='Generosity' ordinal='55' />
            <column datatype='real' name='Dystopia.Residual' ordinal='56' />
            <column datatype='string' name='country.y1' ordinal='57' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region.x</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region.x]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Region.x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area..sq..mi..</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area..sq..mi..]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Area..sq..mi..</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop..Density..per.sq..mi..</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pop..Density..per.sq..mi..]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Pop..Density..per.sq..mi..</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coastline..coast.area.ratio.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Coastline..coast.area.ratio.]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Coastline..coast.area.ratio.</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net.migration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net.migration]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Net.migration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant.mortality..per.1000.births.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infant.mortality..per.1000.births.]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Infant.mortality..per.1000.births.</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP....per.capita.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP....per.capita.]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>GDP....per.capita.</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Literacy....</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Literacy....]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Literacy....</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phones..per.1000.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Phones..per.1000.]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Phones..per.1000.</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arable....</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Arable....]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Arable....</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crops....</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crops....]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Crops....</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other....</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Other....]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Other....</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Climate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Climate]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Climate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birthrate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Birthrate]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Birthrate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deathrate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deathrate]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Deathrate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Agriculture]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Agriculture</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Service]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Service</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country.x</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country.x]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>country.x</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country.y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country.y]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>country.y</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unemployment_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unemployment_percentage]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>unemployment_percentage</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CPI.Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CPI.Rank]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>CPI.Rank</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country.Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country.Code]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Country.Code</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region.y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region.y]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Region.y</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corruption.Perceptions.Index..CPI.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Corruption.Perceptions.Index..CPI.]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Corruption.Perceptions.Index..CPI.</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard.Error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard.Error]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Standard.Error</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lower.Confidence.Interval.x</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Lower.Confidence.Interval.x]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Lower.Confidence.Interval.x</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Upper.Confidence.Interval.x</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Upper.Confidence.Interval.x]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Upper.Confidence.Interval.x</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World.Bank.CPIA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[World.Bank.CPIA]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>World.Bank.CPIA</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World.Economic.Forum.EOS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[World.Economic.Forum.EOS]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>World.Economic.Forum.EOS</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Global.Insight.Country.Risk.Ratings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Global.Insight.Country.Risk.Ratings]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Global.Insight.Country.Risk.Ratings</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bertelsmann.Foundation.Transformation.Index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bertelsmann.Foundation.Transformation.Index]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Bertelsmann.Foundation.Transformation.Index</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>African.Development.Bank.CPIA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[African.Development.Bank.CPIA]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>African.Development.Bank.CPIA</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMD.World.Competitiveness.Yearbook</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IMD.World.Competitiveness.Yearbook]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>IMD.World.Competitiveness.Yearbook</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bertelsmann.Foundation.Sustainable.Governance.Index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bertelsmann.Foundation.Sustainable.Governance.Index]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Bertelsmann.Foundation.Sustainable.Governance.Index</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World.Justice.Project.Rule.of.Law.Index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[World.Justice.Project.Rule.of.Law.Index]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>World.Justice.Project.Rule.of.Law.Index</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRS.International.Country.Risk.Guide</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PRS.International.Country.Risk.Guide]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>PRS.International.Country.Risk.Guide</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Varities.of.Democracy.Project</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Varities.of.Democracy.Project]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Varities.of.Democracy.Project</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economist.Intelligence.Unit.Country.Ratings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Economist.Intelligence.Unit.Country.Ratings]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Economist.Intelligence.Unit.Country.Ratings</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom.House.Nations.in.Transit.Ratings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Freedom.House.Nations.in.Transit.Ratings]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Freedom.House.Nations.in.Transit.Ratings</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERC.Asia.Risk.Guide</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PERC.Asia.Risk.Guide]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>PERC.Asia.Risk.Guide</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sources</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sources]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Sources</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country.x1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country.x1]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>country.x1</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness.Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness.Rank]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Happiness.Rank</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness.Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness.Score]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Happiness.Score</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lower.Confidence.Interval.y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lower.Confidence.Interval.y]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Lower.Confidence.Interval.y</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Upper.Confidence.Interval.y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Upper.Confidence.Interval.y]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Upper.Confidence.Interval.y</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy..GDP.per.Capita.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy..GDP.per.Capita.]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Economy..GDP.per.Capita.</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health..Life.Expectancy.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health..Life.Expectancy.]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Health..Life.Expectancy.</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust..Government.Corruption.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust..Government.Corruption.]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Trust..Government.Corruption.</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia.Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia.Residual]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>Dystopia.Residual</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country.y1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country.y1]</local-name>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias>country.y1</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[full_country_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BF243:no:A1:BF243:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8697</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[African.Development.Bank.CPIA]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Agriculture]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Arable....]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Area..sq..mi..]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Bertelsmann.Foundation.Sustainable.Governance.Index]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Bertelsmann.Foundation.Transformation.Index]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Birthrate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[CPI.Rank]' role='measure' type='quantitative' />
      <column caption='Dystopia %' datatype='real' name='[Calculation_2540382040075300864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Dystopia.Residual]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
      </column>
      <column caption='Economy %' datatype='real' name='[Calculation_2540382040075526145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Economy..GDP.per.Capita.]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
      </column>
      <column caption='Family %' datatype='real' name='[Calculation_2540382040075751426]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Family]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
      </column>
      <column caption='Freedom %' datatype='real' name='[Calculation_2540382040076005379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Freedom]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
      </column>
      <column caption='Generosity %' datatype='real' name='[Calculation_2540382040076120068]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Generosity]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
      </column>
      <column caption='Health %' datatype='real' name='[Calculation_2540382040076251141]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Health..Life.Expectancy.]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
      </column>
      <column caption='S.Error %' datatype='real' name='[Calculation_2540382040076423174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Standard.Error]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
      </column>
      <column caption='Trust %' datatype='real' name='[Calculation_2540382040076570631]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Trust..Government.Corruption.]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
      </column>
      <column datatype='integer' name='[Climate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Coastline..coast.area.ratio.]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Corruption.Perceptions.Index..CPI.]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country.Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Crops....]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deathrate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Dystopia.Residual]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Economist.Intelligence.Unit.Country.Ratings]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='ordinal' />
      <column datatype='real' name='[Economy..GDP.per.Capita.]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' name='[Family]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Freedom.House.Nations.in.Transit.Ratings]' role='measure' type='quantitative' />
      <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
      <column datatype='integer' name='[GDP....per.capita.]' role='measure' type='quantitative' />
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Global.Insight.Country.Risk.Ratings]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Happiness.Rank]' role='measure' type='quantitative' />
      <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health..Life.Expectancy.]' role='measure' type='quantitative' />
      <column datatype='integer' name='[IMD.World.Competitiveness.Yearbook]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Industry]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Infant.mortality..per.1000.births.]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Literacy....]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Lower.Confidence.Interval.x]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lower.Confidence.Interval.y]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Net.migration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Other....]' role='measure' type='quantitative' />
      <column datatype='integer' name='[PERC.Asia.Risk.Guide]' role='measure' type='quantitative' />
      <column datatype='integer' name='[PRS.International.Country.Risk.Guide]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='ordinal' />
      <column datatype='integer' name='[Phones..per.1000.]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Pop..Density..per.sq..mi..]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region.x]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Service]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sources]' role='measure' type='quantitative' />
      <column datatype='real' name='[Standard.Error]' role='measure' type='quantitative' />
      <column datatype='real' name='[Trust..Government.Corruption.]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Upper.Confidence.Interval.x]' role='measure' type='quantitative' />
      <column datatype='real' name='[Upper.Confidence.Interval.y]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Varities.of.Democracy.Project]' role='measure' type='quantitative' />
      <column datatype='integer' name='[World.Bank.CPIA]' role='measure' type='quantitative' />
      <column datatype='integer' name='[World.Economic.Forum.EOS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[World.Justice.Project.Rule.of.Law.Index]' role='measure' type='quantitative' />
      <column datatype='string' name='[country.x1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country.y1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country.y]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[unemployment_percentage]' role='measure' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
      <column-instance column='[African.Development.Bank.CPIA]' derivation='Sum' name='[sum:African.Development.Bank.CPIA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Agriculture]' derivation='Sum' name='[sum:Agriculture:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Arable....]' derivation='Sum' name='[sum:Arable....:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Area..sq..mi..]' derivation='Sum' name='[sum:Area..sq..mi..:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bertelsmann.Foundation.Sustainable.Governance.Index]' derivation='Sum' name='[sum:Bertelsmann.Foundation.Sustainable.Governance.Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bertelsmann.Foundation.Transformation.Index]' derivation='Sum' name='[sum:Bertelsmann.Foundation.Transformation.Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Birthrate]' derivation='Sum' name='[sum:Birthrate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CPI.Rank]' derivation='Sum' name='[sum:CPI.Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Climate]' derivation='Sum' name='[sum:Climate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coastline..coast.area.ratio.]' derivation='Sum' name='[sum:Coastline..coast.area.ratio.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Corruption.Perceptions.Index..CPI.]' derivation='Sum' name='[sum:Corruption.Perceptions.Index..CPI.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Crops....]' derivation='Sum' name='[sum:Crops....:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deathrate]' derivation='Sum' name='[sum:Deathrate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dystopia.Residual]' derivation='Sum' name='[sum:Dystopia.Residual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Economy..GDP.per.Capita.]' derivation='Sum' name='[sum:Economy..GDP.per.Capita.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Family]' derivation='Sum' name='[sum:Family:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom.House.Nations.in.Transit.Ratings]' derivation='Sum' name='[sum:Freedom.House.Nations.in.Transit.Ratings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP....per.capita.]' derivation='Sum' name='[sum:GDP....per.capita.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Global.Insight.Country.Risk.Ratings]' derivation='Sum' name='[sum:Global.Insight.Country.Risk.Ratings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Rank]' derivation='Sum' name='[sum:Happiness.Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Score]' derivation='Sum' name='[sum:Happiness.Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health..Life.Expectancy.]' derivation='Sum' name='[sum:Health..Life.Expectancy.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMD.World.Competitiveness.Yearbook]' derivation='Sum' name='[sum:IMD.World.Competitiveness.Yearbook:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industry]' derivation='Sum' name='[sum:Industry:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Infant.mortality..per.1000.births.]' derivation='Sum' name='[sum:Infant.mortality..per.1000.births.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Literacy....]' derivation='Sum' name='[sum:Literacy....:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lower.Confidence.Interval.x]' derivation='Sum' name='[sum:Lower.Confidence.Interval.x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lower.Confidence.Interval.y]' derivation='Sum' name='[sum:Lower.Confidence.Interval.y:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net.migration]' derivation='Sum' name='[sum:Net.migration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other....]' derivation='Sum' name='[sum:Other....:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PERC.Asia.Risk.Guide]' derivation='Sum' name='[sum:PERC.Asia.Risk.Guide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Phones..per.1000.]' derivation='Sum' name='[sum:Phones..per.1000.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pop..Density..per.sq..mi..]' derivation='Sum' name='[sum:Pop..Density..per.sq..mi..:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Service]' derivation='Sum' name='[sum:Service:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sources]' derivation='Sum' name='[sum:Sources:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Standard.Error]' derivation='Sum' name='[sum:Standard.Error:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust..Government.Corruption.]' derivation='Sum' name='[sum:Trust..Government.Corruption.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Upper.Confidence.Interval.x]' derivation='Sum' name='[sum:Upper.Confidence.Interval.x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Upper.Confidence.Interval.y]' derivation='Sum' name='[sum:Upper.Confidence.Interval.y:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Varities.of.Democracy.Project]' derivation='Sum' name='[sum:Varities.of.Democracy.Project:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World.Bank.CPIA]' derivation='Sum' name='[sum:World.Bank.CPIA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World.Economic.Forum.EOS]' derivation='Sum' name='[sum:World.Economic.Forum.EOS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World.Justice.Project.Rule.of.Law.Index]' derivation='Sum' name='[sum:World.Justice.Project.Rule.of.Law.Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[unemployment_percentage]' derivation='Sum' name='[sum:unemployment_percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2540382040075300864]' derivation='User' name='[usr:Calculation_2540382040075300864:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2540382040075526145]' derivation='User' name='[usr:Calculation_2540382040075526145:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2540382040075751426]' derivation='User' name='[usr:Calculation_2540382040075751426:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2540382040076005379]' derivation='User' name='[usr:Calculation_2540382040076005379:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2540382040076120068]' derivation='User' name='[usr:Calculation_2540382040076120068:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2540382040076251141]' derivation='User' name='[usr:Calculation_2540382040076251141:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2540382040076423174]' derivation='User' name='[usr:Calculation_2540382040076423174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2540382040076570631]' derivation='User' name='[usr:Calculation_2540382040076570631:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country.X)' hidden='true' name='[Action (Country.X)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country.x]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,Country.X)' hidden='true' name='[Action (Region,Country.X)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[country.x]' />
        </groupfilter>
      </group>
      <group caption='Action (Region.x)' hidden='true' name='[Action (Region.x)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region.x]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ak/Desktop/Tableau/World_Happiness/data_prep_whappiness/full_country_data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/06/2018 01:13:39 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='242' timestamp-start='2018-06-06 13:13:39.702' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region.x</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region.x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region.x</remote-alias>
              <ordinal>1</ordinal>
              <family>full_country_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>2</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Area..sq..mi..</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Area..sq..mi..]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Area..sq..mi..</remote-alias>
              <ordinal>3</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pop..Density..per.sq..mi..</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Pop..Density..per.sq..mi..]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pop..Density..per.sq..mi..</remote-alias>
              <ordinal>4</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Coastline..coast.area.ratio.</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Coastline..coast.area.ratio.]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Coastline..coast.area.ratio.</remote-alias>
              <ordinal>5</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>233</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net.migration</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Net.migration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net.migration</remote-alias>
              <ordinal>6</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>237</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infant.mortality..per.1000.births.</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Infant.mortality..per.1000.births.]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infant.mortality..per.1000.births.</remote-alias>
              <ordinal>7</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP....per.capita.</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GDP....per.capita.]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP....per.capita.</remote-alias>
              <ordinal>8</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>174</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Literacy....</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Literacy....]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Literacy....</remote-alias>
              <ordinal>9</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Phones..per.1000.</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Phones..per.1000.]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Phones..per.1000.</remote-alias>
              <ordinal>10</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arable....</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Arable....]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arable....</remote-alias>
              <ordinal>11</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Crops....</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Crops....]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crops....</remote-alias>
              <ordinal>12</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>233</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Other....</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Other....]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Other....</remote-alias>
              <ordinal>13</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Climate</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Climate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Climate</remote-alias>
              <ordinal>14</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Birthrate</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Birthrate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Birthrate</remote-alias>
              <ordinal>15</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deathrate</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deathrate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deathrate</remote-alias>
              <ordinal>16</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Agriculture</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Agriculture]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Agriculture</remote-alias>
              <ordinal>17</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>169</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Industry</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Industry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Industry</remote-alias>
              <ordinal>18</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Service]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Service</remote-alias>
              <ordinal>19</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country.x</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country.x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country.x</remote-alias>
              <ordinal>20</ordinal>
              <family>full_country_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country.y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country.y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country.y</remote-alias>
              <ordinal>21</ordinal>
              <family>full_country_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unemployment_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[unemployment_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>unemployment_percentage</remote-alias>
              <ordinal>22</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CPI.Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CPI.Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CPI.Rank</remote-alias>
              <ordinal>23</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country.Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country.Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country.Code</remote-alias>
              <ordinal>24</ordinal>
              <family>full_country_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region.y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region.y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region.y</remote-alias>
              <ordinal>25</ordinal>
              <family>full_country_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Corruption.Perceptions.Index..CPI.</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Corruption.Perceptions.Index..CPI.]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Corruption.Perceptions.Index..CPI.</remote-alias>
              <ordinal>26</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Standard.Error</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Standard.Error]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Standard.Error</remote-alias>
              <ordinal>27</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>176</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lower.Confidence.Interval.x</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Lower.Confidence.Interval.x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lower.Confidence.Interval.x</remote-alias>
              <ordinal>28</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Upper.Confidence.Interval.x</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Upper.Confidence.Interval.x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Upper.Confidence.Interval.x</remote-alias>
              <ordinal>29</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>World.Bank.CPIA</remote-name>
              <remote-type>20</remote-type>
              <local-name>[World.Bank.CPIA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>World.Bank.CPIA</remote-alias>
              <ordinal>30</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>World.Economic.Forum.EOS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[World.Economic.Forum.EOS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>World.Economic.Forum.EOS</remote-alias>
              <ordinal>31</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Global.Insight.Country.Risk.Ratings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Global.Insight.Country.Risk.Ratings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Global.Insight.Country.Risk.Ratings</remote-alias>
              <ordinal>32</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bertelsmann.Foundation.Transformation.Index</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Bertelsmann.Foundation.Transformation.Index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bertelsmann.Foundation.Transformation.Index</remote-alias>
              <ordinal>33</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>African.Development.Bank.CPIA</remote-name>
              <remote-type>20</remote-type>
              <local-name>[African.Development.Bank.CPIA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>African.Development.Bank.CPIA</remote-alias>
              <ordinal>34</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IMD.World.Competitiveness.Yearbook</remote-name>
              <remote-type>20</remote-type>
              <local-name>[IMD.World.Competitiveness.Yearbook]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IMD.World.Competitiveness.Yearbook</remote-alias>
              <ordinal>35</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bertelsmann.Foundation.Sustainable.Governance.Index</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Bertelsmann.Foundation.Sustainable.Governance.Index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bertelsmann.Foundation.Sustainable.Governance.Index</remote-alias>
              <ordinal>36</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>World.Justice.Project.Rule.of.Law.Index</remote-name>
              <remote-type>20</remote-type>
              <local-name>[World.Justice.Project.Rule.of.Law.Index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>World.Justice.Project.Rule.of.Law.Index</remote-alias>
              <ordinal>37</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PRS.International.Country.Risk.Guide</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PRS.International.Country.Risk.Guide]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PRS.International.Country.Risk.Guide</remote-alias>
              <ordinal>38</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Varities.of.Democracy.Project</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Varities.of.Democracy.Project]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Varities.of.Democracy.Project</remote-alias>
              <ordinal>39</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Economist.Intelligence.Unit.Country.Ratings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Economist.Intelligence.Unit.Country.Ratings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Economist.Intelligence.Unit.Country.Ratings</remote-alias>
              <ordinal>40</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom.House.Nations.in.Transit.Ratings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Freedom.House.Nations.in.Transit.Ratings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom.House.Nations.in.Transit.Ratings</remote-alias>
              <ordinal>41</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PERC.Asia.Risk.Guide</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PERC.Asia.Risk.Guide]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PERC.Asia.Risk.Guide</remote-alias>
              <ordinal>42</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sources</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sources]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sources</remote-alias>
              <ordinal>43</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country.x1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country.x1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country.x1</remote-alias>
              <ordinal>44</ordinal>
              <family>full_country_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>45</ordinal>
              <family>full_country_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness.Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Happiness.Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness.Rank</remote-alias>
              <ordinal>46</ordinal>
              <family>full_country_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>207</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness.Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness.Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness.Score</remote-alias>
              <ordinal>47</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>207</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lower.Confidence.Interval.y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lower.Confidence.Interval.y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lower.Confidence.Interval.y</remote-alias>
              <ordinal>48</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Upper.Confidence.Interval.y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Upper.Confidence.Interval.y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Upper.Confidence.Interval.y</remote-alias>
              <ordinal>49</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Economy..GDP.per.Capita.</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Economy..GDP.per.Capita.]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Economy..GDP.per.Capita.</remote-alias>
              <ordinal>50</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Family</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Family]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Family</remote-alias>
              <ordinal>51</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health..Life.Expectancy.</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Health..Life.Expectancy.]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health..Life.Expectancy.</remote-alias>
              <ordinal>52</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom</remote-alias>
              <ordinal>53</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trust..Government.Corruption.</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Trust..Government.Corruption.]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trust..Government.Corruption.</remote-alias>
              <ordinal>54</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>55</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dystopia.Residual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Dystopia.Residual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dystopia.Residual</remote-alias>
              <ordinal>56</ordinal>
              <family>full_country_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country.y1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country.y1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country.y1</remote-alias>
              <ordinal>57</ordinal>
              <family>full_country_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.206818' measure-ordering='alphabetic' measure-percentage='0.793182' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East and Northern Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central and Eastern Europe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Southeastern Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latin America and Caribbean&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]&#10;[none:country.x:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Latin America and Caribbean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Southeastern Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Central and Eastern Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;NA&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Middle East and Northern Africa&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Bertelsmann.Foundation.Transformation.Index:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Happiness.Score:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:PERC.Asia.Risk.Guide:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075300864:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076120068:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076005379:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Climate:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Deathrate:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Varities.of.Democracy.Project:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Birthrate:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Net.migration:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Trust..Government.Corruption.:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Arable....:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Lower.Confidence.Interval.y:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Service:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Family:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:African.Development.Bank.CPIA:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Lower.Confidence.Interval.x:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Phones..per.1000.:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Economy..GDP.per.Capita.:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:unemployment_percentage:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076423174:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Area..sq..mi..:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Global.Insight.Country.Risk.Ratings:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Sources:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Coastline..coast.area.ratio.:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Industry:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:World.Bank.CPIA:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Corruption.Perceptions.Index..CPI.:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Dystopia.Residual:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:World.Economic.Forum.EOS:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Literacy....:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Other....:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Health..Life.Expectancy.:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Upper.Confidence.Interval.x:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075751426:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076251141:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Bertelsmann.Foundation.Sustainable.Governance.Index:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Happiness.Rank:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Standard.Error:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Freedom.House.Nations.in.Transit.Ratings:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Pop..Density..per.sq..mi..:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075526145:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Crops....:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Infant.mortality..per.1000.births.:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:World.Justice.Project.Rule.of.Law.Index:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:CPI.Rank:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:IMD.World.Competitiveness.Yearbook:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Upper.Confidence.Interval.y:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076570631:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Agriculture:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:GDP....per.capita.:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Population:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country.x:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Is.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turks &amp; Caicos Is&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Kitts &amp; Nevis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia &amp; Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia, Fed. St.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo, Repub. of the&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gaza Strip&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome &amp; Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua &amp; Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bank&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St Pierre &amp; Miquelon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;N. Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Sheet 10' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column datatype='integer' name='[Birthrate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deathrate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Net.migration]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Birthrate]' derivation='Avg' name='[avg:Birthrate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deathrate]' derivation='Avg' name='[avg:Deathrate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net.migration]' derivation='Avg' name='[avg:Net.migration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Birthrate]' derivation='Sum' name='[sum:Birthrate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Action (Country.X)]'>
            <groupfilter function='level-members' level='[country.x]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Birthrate:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Birthrate:qk]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Action (Country.X)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]' />
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Birthrate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]' />
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Net.migration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]' />
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]' />
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Deathrate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]' />
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Birthrate:qk] + ([federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Deathrate:qk] + ([federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Population:qk] + [federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Net.migration:qk])))</rows>
        <cols>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Contributing Factors to Happiness - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column caption='Dystopia %' datatype='real' name='[Calculation_2540382040075300864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Dystopia.Residual]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
            </column>
            <column caption='Economy %' datatype='real' name='[Calculation_2540382040075526145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Economy..GDP.per.Capita.]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
            </column>
            <column caption='Family %' datatype='real' name='[Calculation_2540382040075751426]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Family]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
            </column>
            <column caption='Freedom %' datatype='real' name='[Calculation_2540382040076005379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Freedom]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
            </column>
            <column caption='Generosity %' datatype='real' name='[Calculation_2540382040076120068]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Generosity]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
            </column>
            <column caption='Health %' datatype='real' name='[Calculation_2540382040076251141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Health..Life.Expectancy.]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
            </column>
            <column caption='S.Error %' datatype='real' name='[Calculation_2540382040076423174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Standard.Error]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
            </column>
            <column caption='Trust %' datatype='real' name='[Calculation_2540382040076570631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Trust..Government.Corruption.]))/(SUM(ZN([Standard.Error]))+SUM(ZN([Economy..GDP.per.Capita.]))+SUM(ZN([Family]))+SUM(ZN([Health..Life.Expectancy.]))+SUM(ZN([Freedom]))+SUM(ZN([Trust..Government.Corruption.]))+SUM(ZN([Generosity]))+SUM(ZN([Dystopia.Residual])))' />
            </column>
            <column datatype='real' name='[Dystopia.Residual]' role='measure' type='quantitative' />
            <column datatype='real' name='[Economy..GDP.per.Capita.]' role='measure' type='quantitative' />
            <column datatype='real' name='[Family]' role='measure' type='quantitative' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health..Life.Expectancy.]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region.x]' role='dimension' type='nominal' />
            <column datatype='real' name='[Standard.Error]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trust..Government.Corruption.]' role='measure' type='quantitative' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Region.x]' derivation='None' name='[none:Region.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2540382040075300864]' derivation='User' name='[usr:Calculation_2540382040075300864:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2540382040075526145]' derivation='User' name='[usr:Calculation_2540382040075526145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2540382040075751426]' derivation='User' name='[usr:Calculation_2540382040075751426:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2540382040076005379]' derivation='User' name='[usr:Calculation_2540382040076005379:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2540382040076120068]' derivation='User' name='[usr:Calculation_2540382040076120068:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2540382040076251141]' derivation='User' name='[usr:Calculation_2540382040076251141:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2540382040076423174]' derivation='User' name='[usr:Calculation_2540382040076423174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2540382040076570631]' derivation='User' name='[usr:Calculation_2540382040076570631:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075300864:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075526145:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075751426:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076005379:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076120068:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076251141:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076423174:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076570631:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Action (Country.X)]'>
            <groupfilter function='level-members' level='[country.x]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region.x:nk]'>
            <groupfilter function='member' level='[none:Region.x:nk]' member='&quot;ASIA (EX. NEAR EAST)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[:Measure Names]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region.x:nk]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Action (Country.X)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075300864:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075526145:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040075751426:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076005379:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076120068:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076251141:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076423174:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[usr:Calculation_2540382040076570631:qk]' />
              <wedge-size column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Multiple Values]' />
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region.x:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World Happiness</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column datatype='real' name='[Happiness.Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Happiness.Score]' derivation='Avg' name='[avg:Happiness.Score:qk]' pivot='key' type='quantitative' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]'>
            <groupfilter function='level-members' level='[none:country.x:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Happiness.Score:qk]' num-steps='23' palette='red_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Happiness.Score:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
              <geometry column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</rows>
        <cols>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column datatype='integer' name='[Corruption.Perceptions.Index..CPI.]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Corruption.Perceptions.Index..CPI.]' derivation='Sum' name='[sum:Corruption.Perceptions.Index..CPI.:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Corruption.Perceptions.Index..CPI.:qk]' />
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</rows>
        <cols>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
              <size column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</rows>
        <cols>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column datatype='real' name='[Economy..GDP.per.Capita.]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy..GDP.per.Capita.]' derivation='Sum' name='[sum:Economy..GDP.per.Capita.:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
              <size column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Economy..GDP.per.Capita.:qk]' />
              <lod column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Economy..GDP.per.Capita.:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</rows>
        <cols>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column datatype='real' name='[Dystopia.Residual]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Literacy....]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trust..Government.Corruption.]' role='measure' type='quantitative' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dystopia.Residual]' derivation='Sum' name='[sum:Dystopia.Residual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Literacy....]' derivation='Sum' name='[sum:Literacy....:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust..Government.Corruption.]' derivation='Sum' name='[sum:Trust..Government.Corruption.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[unemployment_percentage]' derivation='Sum' name='[sum:unemployment_percentage:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[unemployment_percentage]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Dystopia.Residual:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Literacy....:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:unemployment_percentage:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Dystopia.Residual:qk]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:unemployment_percentage:qk]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Literacy....:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:unemployment_percentage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Literacy....:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='triangle' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Dystopia.Residual:qk] + [federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Trust..Government.Corruption.:qk])</rows>
        <cols>([federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:unemployment_percentage:qk] + ([federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Population:qk] + [federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Literacy....:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[unemployment_percentage]' derivation='Sum' name='[sum:unemployment_percentage:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[unemployment_percentage]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
              <size column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:unemployment_percentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</rows>
        <cols>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
            <column datatype='integer' name='[Birthrate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Birthrate]' derivation='Sum' name='[sum:Birthrate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</column>
            <column>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' />
              <size column='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Birthrate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Latitude (generated)]</rows>
        <cols>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' mark-type='highlighted' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Sheet 3' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Sheet 5' w='32900' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Sheet 4' w='20600' x='62600' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Sheet 6' w='28900' x='33700' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='6' name='Sheet 3' pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Happiness.Score:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42625' id='8' name='Sheet 5' pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' type='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='9' name='Sheet 5' pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Population:qk]' type='size' w='16000' x='83200' y='51750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18250' id='11' name='Sheet 4' pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Corruption.Perceptions.Index..CPI.:qk]' type='size' w='16000' x='83200' y='65000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='13' name='Sheet 6' pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Economy..GDP.per.Capita.:qk]' type='size' w='16000' x='83200' y='83250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Sheet 4' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='Sheet 7' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='18250' id='6' name='Sheet 4' pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Corruption.Perceptions.Index..CPI.:qk]' type='size' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='79750' id='7' name='Sheet 4' pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' type='color' w='16000' x='83200' y='19250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='full_country_data' name='federated.0890hrw0q2d5r317tv6id0z9pvpu' />
      </datasources>
      <datasource-dependencies datasource='federated.0890hrw0q2d5r317tv6id0z9pvpu'>
        <column datatype='string' name='[Region.x]' role='dimension' type='nominal' />
        <column caption='Country.X' datatype='string' name='[country.x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Region.x]' derivation='None' name='[none:Region.x:nk]' pivot='key' type='nominal' />
        <column-instance column='[country.x]' derivation='None' name='[none:country.x:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Sheet 3' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Sheet 10' w='60000' x='23200' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='Sheet 11' w='22400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6000' id='6' name='Sheet 3' pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Happiness.Score:qk]' single-line='true' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='dropdown' name='Sheet 11' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region.x:nk]' type='filter' w='16000' x='83200' y='7000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='12' mode='dropdown' name='Sheet 3' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' type='filter' values='database' w='16000' x='83200' y='13500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Happiness.Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Happiness.Score:qk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Corruption.Perceptions.Index..CPI.:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Population:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Economy..GDP.per.Capita.:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Southeastern Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:unemployment_percentage:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[sum:Birthrate:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Australia and New Zealand&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 10'>
          <current-page>
            <multibucket>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[avg:Birthrate:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 11'>
          <current-page>
            <multibucket>
              <bucket>&quot;LATIN AMER. &amp; CARIB&quot;</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='2' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region:nk]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:country.x:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region.x:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0890hrw0q2d5r317tv6id0z9pvpu].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;BALTICS&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[:Measure Names]</field>
            <field>[federated.0890hrw0q2d5r317tv6id0z9pvpu].[none:Region.x:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      1ahHvsdh8S8Qo1b2wBS7NAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      ygAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Sheet 11' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVY0lEQVR4nO2d224kyXGG/zr2keSsgJXkhQTZL2DI134SP5yfxtCFDb+AbUCCbWgNaUa7
      O2Qf6ly+oP5kVHZWdTe7ORwy4gMG7OlDVXZW/pERkZHV0ffff9+naQrD0ETTNPjuu++iNE1T
      fPvtt6/dHsP4onz8+BEAEL9yOwzjVTEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiq
      MQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEB
      GKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiq
      MQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEB
      GKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiq
      MQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEB
      GKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiq
      MQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEB
      GKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiq
      MQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEB
      GKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKoxARiqMQEYqjEBGKpJX7sBL0nf9+j7Hk3TIIoi
      AECapu6xYbxbAZRliaqq0Pc9uq5zzydJgiiKMJvNTAzG1yeAvu+fNSj7vnd/67rGfr9H27YA
      MDheSAyGXl5NABywXde5x/x/kiSI48fw5JQBSjdnu90iiqKjn4njGHVdo6oqzGYzE4FiXkUA
      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
    </thumbnail>
  </thumbnails>
</workbook>
